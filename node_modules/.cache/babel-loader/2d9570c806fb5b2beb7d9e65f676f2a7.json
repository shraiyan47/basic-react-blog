{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [errormsg, setErrormsg] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          throw Error(\"Could Not Fetch The Data\");\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setErrormsg(null);\n      }).catch(err => {\n        console.log(err.message);\n        setIsPending(false);\n        setErrormsg(err.message);\n      });\n    }, 1000);\n  }, []);\n  return {\n    data,\n    isPending,\n    errormsg\n  };\n};\n\n_s(useFetch, \"y+NXIXSgpo/Iipc7li1uI6fDQh4=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/shahadat/Desktop/React/dojo-blog/dojo-blog/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","errormsg","setErrormsg","setTimeout","fetch","then","res","ok","Error","json","catch","err","console","log","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAEtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AAEIC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAACR,GAAD,CAAL,CACCS,IADD,CACMC,GAAG,IAAI;AACT,YAAG,CAACA,GAAG,CAACC,EAAR,EACA;AACI,gBAAMC,KAAK,CAAC,0BAAD,CAAX;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OAPD,EAQCJ,IARD,CAQMR,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OAZD,EAaCQ,KAbD,CAaOC,GAAG,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACAd,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,WAAW,CAACS,GAAG,CAACG,OAAL,CAAX;AACH,OAjBD;AAkBH,KAnBS,EAmBP,IAnBO,CAAV;AAoBH,GArBQ,EAqBN,EArBM,CAAT;AAuBA,SAAO;AAAEjB,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACP,CA9BD;;GAAMN,Q;;AAgCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\n\nconst useFetch = (url) => {\n\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [errormsg, setErrormsg] = useState(null);\n\n        useEffect(() => {\n            setTimeout(() => {\n                fetch(url)\n                .then(res => {\n                    if(!res.ok)\n                    {\n                        throw Error(\"Could Not Fetch The Data\");\n                    }\n                    return res.json();\n                })\n                .then(data => {\n                    setData(data);\n                    setIsPending(false);\n                    setErrormsg(null);\n                })\n                .catch(err => {\n                    console.log(err.message);\n                    setIsPending(false);\n                    setErrormsg(err.message);\n                })\n            }, 1000);\n        }, []);\n\n        return { data, isPending, errormsg}\n}\n \nexport default useFetch;"]},"metadata":{},"sourceType":"module"}